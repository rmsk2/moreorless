rem "**************************************"
rem "*                                    *"
rem "*    A word guessing game for the    *"
rem "*                                    *"
rem "*   Foenix F256 line of computers    *"
rem "*                                    *"
rem "*   Written by Martin Grap in 2024   *"
rem "*                                    *"
rem "* using the 'moreorless' text editor *"
rem "*                                    *"
rem "**************************************"

max_tries = 8

tries_left = max_tries
num_correct = 0
game_end = false
was_stopped = false

t = -1 * timer()
dummy# = rnd(t)

read num_words
dim words$(num_words)
dim guesses$(250)
read_words()
main()

data 32
data "banana", "computer", "foenix", "city"
data "syzygy", "assembler", "keyboard", "lion" 
data "memory", "loop", "retro", "bike"
data "system", "house", "plane", "carriage"
data "ball", "tennis", "stick", "pool"
data "sun", "galaxy", "telescope", "video"
data "asterisk", "milk", "water", "wall"
data "moon", "mercury", "jupiter", "paper"

end


proc main()
  repeat
    rand_index = 1 + random(num_words)
    selected_word$ = words$(rand_index)
    sel_len = len(selected_word$)
    already_guessed$ = ""
    
    prepare_guesses()
    
    print chr$(12)
    print "Guess the word I have in mind"
    print "-----------------------------"
    game_loop()
    eval_end()
  until game_end = true
  
  print
  print "Bye"
endproc


proc read_words()
  local rand_index, i
  
  for i = 1 to num_words
    read words$(i)
  next
endproc


proc eval_end()
  if tries_left > 0
    print_guesses()
    print
    print "You win!"
  else
    print
    print "The correct solution is: ";selected_word$
    print
    print "Sorry you lose. 
  endif
  
  if not(was_stopped)
    print
    input "Play again (yes/no)? ";p$
    if p$ = "yes"
      game_end = false
    endif
  endif
endproc


proc game_loop()
  local g$, c$
  
  game_end = false
  tries_left = max_tries
  
  repeat
    print_guesses()
    g$ = ""
    
    repeat 
      input "Your guess: ";g$
    until g$ <> ""
    
    if g$ = "stop"
      tries_left = 0
      was_stopped = true
    else
      c$ = left$(g$, 1)
      already_guessed$ = already_guessed$ + c$
      
      check_guess(c$)
      
      if num_correct = 0
        tries_left = tries_left - 1
      else
        check_end()
      endif
      print "-------------------------------"  
    endif
    
  until (tries_left = 0) | (game_end <> false)

  game_end = true
endproc


proc check_guess(u$)  
  num_correct = 0
  
  for i = 1 to sel_len
    if mid$(selected_word$, i, 1) = u$
      num_correct = num_correct + 1
      guesses$(i) = u$   
    endif
  next
endproc


proc check_end()
  local num_guessed
  
  num_guessed = 0
  
  for i = 1 to sel_len
    if guesses$(i) <> "_"
      num_guessed = num_guessed + 1
    endif  
  next
  
  game_end = num_guessed >= sel_len 
endproc


proc prepare_guesses()
  for i = 1 to sel_len
    guesses$(i) = "_"  
  next
endproc


proc print_guesses()
  print
  for i = 1 to sel_len
    print guesses$(i);" ";  
  next
  
  print
  print
  print "Already guessed: ";already_guessed$
  print
  print
  print "Unsuccessfull tries left: ";tries_left
endproc
